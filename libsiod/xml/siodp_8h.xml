<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="siodp_8h" kind="file">
    <compoundname>siodp.h</compoundname>
    <includedby refid="slib_8c" local="yes">slib.c</includedby>
    <includedby refid="sliba_8c" local="yes">sliba.c</includedby>
    <includedby refid="slibu_8c" local="yes">slibu.c</includedby>
    <includedby refid="trace_8c" local="yes">trace.c</includedby>
    <innerclass refid="structuser__type__hooks" prot="public">user_type_hooks</innerclass>
    <innerclass refid="structcatch__frame" prot="public">catch_frame</innerclass>
    <innerclass refid="structgc__protected" prot="public">gc_protected</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="siodp_8h_1a783867e9d408d7a7cdb11eb1a63910d4" prot="public" static="no">
        <name>NEWCELL</name>
        <param><defname>_into</defname></param>
        <param><defname>_type</defname></param>
        <initializer>{if (gc_kind_copying == 1)            \
   {if ((_into = heap) &gt;= heap_end)   \
      gc_fatal_error();               \
    heap = _into+1;}                  \
 else                                 \
   {if NULLP(freelist)                \
      gc_for_newcell();               \
    _into = freelist;                 \
    freelist = CDR(freelist);         \
    ++gc_cells_allocated;}            \
 (*_into).gc_mark = 0;                \
 (*_into).type = (short) _type;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="63" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="siodp_8h_1a2b3caa038c1e70dffa0401b33cf58b5f" prot="public" static="no">
        <name>INTERRUPT_CHECK</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="74" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="siodp_8h_1a202e6c79ba6fa19acd83038d1c35fe65" prot="public" static="no">
        <name>STACK_LIMIT</name>
        <param><defname>_ptr</defname></param>
        <param><defname>_amt</defname></param>
        <initializer>(((char *)_ptr) - (_amt))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="80" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="siodp_8h_1aabc061ea85ae227a1182a4b639990d0d" prot="public" static="no">
        <name>STACK_CHECK</name>
        <param><defname>_ptr</defname></param>
        <initializer>if (((char *) (_ptr)) &lt; stack_limit_ptr) err_stack((char *) _ptr);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="83" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="siodp_8h_1af00c6de32379cc2d70c136e841d9f456" prot="public" static="no">
        <name>SIG_restargs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="90" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="siodp_8h_1ae7b92ef582bcc23ad7bff5fb58013270" prot="public" static="no">
        <name>VLOAD_OFFSET_HACK_CHAR</name>
        <initializer>&apos;|&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="207" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="siodp_8h_1a6424de518b088c2ba22924f12c1a320a" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* tkbuffer</definition>
        <argsstring></argsstring>
        <name>tkbuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="15" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1afde44f787fbffa1b21bc290886e42aaa" prot="public" static="no" mutable="no">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP heap</definition>
        <argsstring></argsstring>
        <name>heap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="16" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a104aa54cbe0044f2f24fe4235f9fb132" prot="public" static="no" mutable="no">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP heap_end</definition>
        <argsstring></argsstring>
        <name>heap_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="16" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a557ce601efaaf751de39d8f8a0950457" prot="public" static="no" mutable="no">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP heap_org</definition>
        <argsstring></argsstring>
        <name>heap_org</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="16" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1ae073b68646007082e5116b3d9d591b74" prot="public" static="no" mutable="no">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP sym_t</definition>
        <argsstring></argsstring>
        <name>sym_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="17" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a79eef6fd207c42a9cd66f01f2c5877f7" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long siod_verbose_level</definition>
        <argsstring></argsstring>
        <name>siod_verbose_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="19" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a6dd61c9cff7c99b09c4486ebc533487e" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* siod_lib</definition>
        <argsstring></argsstring>
        <name>siod_lib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="20" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1aea35c3cfce9a1746e14eceb1235f9bb4" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long nointerrupt</definition>
        <argsstring></argsstring>
        <name>nointerrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="21" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a5e32b6df5fb092e11f07e5b1b6ce3636" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long interrupt_differed</definition>
        <argsstring></argsstring>
        <name>interrupt_differed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="22" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a5029863d5b7dfc614ee0dd85e05eeed9" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long errjmp_ok</definition>
        <argsstring></argsstring>
        <name>errjmp_ok</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="23" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a3cdd7fd4c7870815312fac12e92a7f64" prot="public" static="no" mutable="no">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP unbound_marker</definition>
        <argsstring></argsstring>
        <name>unbound_marker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="24" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a11ecec7bfb44177c8f5114f279553662" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structcatch__frame" kindref="compound">catch_frame</ref> *</type>
        <definition>struct catch_frame* catch_framep</definition>
        <argsstring></argsstring>
        <name>catch_framep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="44" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="siodp_8h_1a733513abc37ea45822d20a4daa3627e6" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* stack_limit_ptr</definition>
        <argsstring></argsstring>
        <name>stack_limit_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="78" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="siodp_8h_1a43492baab6354829e2a7ac8baa0e074e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void err_stack</definition>
        <argsstring>(char *)</argsstring>
        <name>err_stack</name>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="85" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="643" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ab0c31bfdea3757a384261e227a14fcee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_sigfpe</definition>
        <argsstring>(int sig SIG_restargs)</argsstring>
        <name>handle_sigfpe</name>
        <param>
          <type>int sig</type>
          <declname>SIG_restargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="93" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="254" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a8345423dfb2bca818104acf41244c17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_sigint</definition>
        <argsstring>(int sig SIG_restargs)</argsstring>
        <name>handle_sigint</name>
        <param>
          <type>int sig</type>
          <declname>SIG_restargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="94" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="262" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1abefa8aaaa49977c22c017be699ef0b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void err_ctrl_c</definition>
        <argsstring>(void)</argsstring>
        <name>err_ctrl_c</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="95" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="280" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ae0fab4a62b64039b919c5dded510720c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double myruntime</definition>
        <argsstring>(void)</argsstring>
        <name>myruntime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="96" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="442" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ad538d341e8f285ac04d28a93dd4d7a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fput_st</definition>
        <argsstring>(FILE *f, char *st)</argsstring>
        <name>fput_st</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="97" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="517" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a672281f04ac659adcfbe460a2d873f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_st</definition>
        <argsstring>(char *st)</argsstring>
        <name>put_st</name>
        <param>
          <type>char *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="98" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="527" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ae31ca6c3abc2b97e091b3720ae86d930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void grepl_puts</definition>
        <argsstring>(char *, void(*)(char *))</argsstring>
        <name>grepl_puts</name>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>void(*)(char *)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="99" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="530" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a986eef3b97c4aad675ed886f02481f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_fatal_error</definition>
        <argsstring>(void)</argsstring>
        <name>gc_fatal_error</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="100" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="699" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a0377e2d31629c56795fdafd1dd6026bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP gen_intern</definition>
        <argsstring>(char *name, long copyp)</argsstring>
        <name>gen_intern</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>long</type>
          <declname>copyp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="101" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="884" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ae71bf6014338974403758a6ac1935734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scan_registers</definition>
        <argsstring>(void)</argsstring>
        <name>scan_registers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="102" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="950" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a665ff981973a9fcb00b65b512f4ca8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_storage_1</definition>
        <argsstring>(void)</argsstring>
        <name>init_storage_1</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="103" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="970" bodyend="1019"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1abdc4bd54dde3ae95c97917a84b6a054f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structuser__type__hooks" kindref="compound">user_type_hooks</ref> *</type>
        <definition>struct user_type_hooks* get_user_type_hooks</definition>
        <argsstring>(long type)</argsstring>
        <name>get_user_type_hooks</name>
        <param>
          <type>long</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="104" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1064" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a88e5690d1f412c291f043a63581681a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP get_newspace</definition>
        <argsstring>(void)</argsstring>
        <name>get_newspace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="105" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1133" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1acd3162de6b44805d90232a94acb00362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scan_newspace</definition>
        <argsstring>(LISP newspace)</argsstring>
        <name>scan_newspace</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>newspace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="106" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1144" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a6c303debd0776d7945bdd8f1f483e360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_oldspace</definition>
        <argsstring>(LISP space, LISP end)</argsstring>
        <name>free_oldspace</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>space</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="107" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1173" bodyend="1196"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a3c807cef5c19a8d0fbac7ef270175a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_stop_and_copy</definition>
        <argsstring>(void)</argsstring>
        <name>gc_stop_and_copy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="108" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1198" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a04255654b7f695db7fa7a21a3f6552e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_for_newcell</definition>
        <argsstring>(void)</argsstring>
        <name>gc_for_newcell</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="109" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1239" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a7a3f29622eb8b713afa694e813224817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_mark_and_sweep</definition>
        <argsstring>(void)</argsstring>
        <name>gc_mark_and_sweep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="110" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1262" bodyend="1280"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a73d5154c9fe24f1754bd6e7731a7d13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_ms_stats_start</definition>
        <argsstring>(void)</argsstring>
        <name>gc_ms_stats_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="111" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1282" bodyend="1286"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a16215ecaa76d0b63d6373be3706ac84e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_ms_stats_end</definition>
        <argsstring>(void)</argsstring>
        <name>gc_ms_stats_end</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="112" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1288" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aa4f5bcd30bed31d680d38dbee6549132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_mark</definition>
        <argsstring>(LISP ptr)</argsstring>
        <name>gc_mark</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="113" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1296" bodyend="1330"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ad6e9dd69ff2519d97201942b19c42e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mark_protected_registers</definition>
        <argsstring>(void)</argsstring>
        <name>mark_protected_registers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="114" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1332" bodyend="1340"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a6daf0b717d315631ad834b14b7530673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mark_locations</definition>
        <argsstring>(LISP *start, LISP *end)</argsstring>
        <name>mark_locations</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="115" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1342" bodyend="1350"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1acd1a6a61e410a95b8ccc0cf1024828c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mark_locations_array</definition>
        <argsstring>(LISP *x, long n)</argsstring>
        <name>mark_locations_array</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="116" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1364" bodyend="1370"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a7cefa1c88f045205deaed7cf59472201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_sweep</definition>
        <argsstring>(void)</argsstring>
        <name>gc_sweep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="117" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1372" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1abee7de64a3c86d2a46d61fbd720e9a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_args</definition>
        <argsstring>(LISP l, LISP env)</argsstring>
        <name>leval_args</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="118" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1487" bodyend="1498"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a4de2d62f1b970d09f4266f275de532de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP extend_env</definition>
        <argsstring>(LISP actuals, LISP formals, LISP env)</argsstring>
        <name>extend_env</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>actuals</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>formals</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="119" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1500" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a2dc67d4a4dc2e50f571e7bbb3ec909fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP envlookup</definition>
        <argsstring>(LISP var, LISP env)</argsstring>
        <name>envlookup</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="120" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1507" bodyend="1522"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1abe099b58030928ac51d67e82019240cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP setvar</definition>
        <argsstring>(LISP var, LISP val, LISP env)</argsstring>
        <name>setvar</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="121" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1751" bodyend="1756"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a9e33e857c0d0705cb61782362bbb9082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_setq</definition>
        <argsstring>(LISP args, LISP env)</argsstring>
        <name>leval_setq</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="122" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1758" bodyend="1759"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1af363a81db2cc35351d166aee37126877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP syntax_define</definition>
        <argsstring>(LISP args)</argsstring>
        <name>syntax_define</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="123" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1761" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a0195297b8f2dd2c1003ac72b94e5c77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_define</definition>
        <argsstring>(LISP args, LISP env)</argsstring>
        <name>leval_define</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="124" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1770" bodyend="1782"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aed0624fbcb44aa54ebff0c0c4035aee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_if</definition>
        <argsstring>(LISP *pform, LISP *penv)</argsstring>
        <name>leval_if</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>pform</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>penv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="125" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1784" bodyend="1790"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a78f863faf8b3d4263649dba40a97697b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_lambda</definition>
        <argsstring>(LISP args, LISP env)</argsstring>
        <name>leval_lambda</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="126" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1792" bodyend="1797"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a32399c34570fabb1742d384a1ebc7a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_progn</definition>
        <argsstring>(LISP *pform, LISP *penv)</argsstring>
        <name>leval_progn</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>pform</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>penv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="127" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1799" bodyend="1806"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1afd32530bd394d66db65cd6ed9f31b764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_or</definition>
        <argsstring>(LISP *pform, LISP *penv)</argsstring>
        <name>leval_or</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>pform</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>penv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="128" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1808" bodyend="1818"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a564b994969ddb9b12cc415b68601f58c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_and</definition>
        <argsstring>(LISP *pform, LISP *penv)</argsstring>
        <name>leval_and</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>pform</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>penv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="129" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1820" bodyend="1830"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1acc624aa1665206381a5bbc1c300b6a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_catch_1</definition>
        <argsstring>(LISP forms, LISP env)</argsstring>
        <name>leval_catch_1</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>forms</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="130" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1832" bodyend="1837"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ad833540d0c868a3a052b1130552ac356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_catch</definition>
        <argsstring>(LISP args, LISP env)</argsstring>
        <name>leval_catch</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="131" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1839" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a11811035bb1a9882b95e9c04c4e19345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lthrow</definition>
        <argsstring>(LISP tag, LISP value)</argsstring>
        <name>lthrow</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="132" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1851" bodyend="1859"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ac8b775f13790a8a310d73d7e9ff1340d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_let</definition>
        <argsstring>(LISP *pform, LISP *penv)</argsstring>
        <name>leval_let</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>pform</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
          <declname>penv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="133" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1861" bodyend="1867"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ab43f65f78c600c2b019aad79cb74fe0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP reverse</definition>
        <argsstring>(LISP l)</argsstring>
        <name>reverse</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="134" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1889" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a5af89037f98ebea8513caae470f13f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP let_macro</definition>
        <argsstring>(LISP form)</argsstring>
        <name>let_macro</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>form</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="135" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1895" bodyend="1907"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a4bc3b11ad1144525ba80ad98cfec0614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_quote</definition>
        <argsstring>(LISP args, LISP env)</argsstring>
        <name>leval_quote</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="136" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1909" bodyend="1910"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ada2e75307a508c56099025ef32eed760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_tenv</definition>
        <argsstring>(LISP args, LISP env)</argsstring>
        <name>leval_tenv</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="137" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1912" bodyend="1913"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a00b6fa79a0f1d0cb2340992bc405c2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int flush_ws</definition>
        <argsstring>(struct gen_readio *f, char *eoferr)</argsstring>
        <name>flush_ws</name>
        <param>
          <type>struct <ref refid="structgen__readio" kindref="compound">gen_readio</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>eoferr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="138" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2055" bodyend="2063"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a1fb970c08d70874a7f9be27962f1314a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int f_getc</definition>
        <argsstring>(FILE *f)</argsstring>
        <name>f_getc</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="139" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2039" bodyend="2050"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a99593ef7c4e5c06ac2efe63257c77066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void f_ungetc</definition>
        <argsstring>(int c, FILE *f)</argsstring>
        <name>f_ungetc</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="140" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2052" bodyend="2053"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a5a8c19ff5cd220da39df87538f2ddf24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lreadr</definition>
        <argsstring>(struct gen_readio *f)</argsstring>
        <name>lreadr</name>
        <param>
          <type>struct <ref refid="structgen__readio" kindref="compound">gen_readio</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="141" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2087" bodyend="2130"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a11907e67cefc1d891de3be63cd9913aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lreadparen</definition>
        <argsstring>(struct gen_readio *f)</argsstring>
        <name>lreadparen</name>
        <param>
          <type>struct <ref refid="structgen__readio" kindref="compound">gen_readio</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="142" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2132" bodyend="2144"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ae45823719fde5a5784394907ad255600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP arglchk</definition>
        <argsstring>(LISP x)</argsstring>
        <name>arglchk</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="143" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2355" bodyend="2363"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a0a26204f5985c2635a14725178d31640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_storage_a1</definition>
        <argsstring>(long type)</argsstring>
        <name>init_storage_a1</name>
        <param>
          <type>long</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="144" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="35" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a8a1fe5dd0f05f4e9b1d9894d4b11292f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_storage_a</definition>
        <argsstring>(void)</argsstring>
        <name>init_storage_a</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="145" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="53" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a10b0f44e201408a9129c58ef39815326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP array_gc_relocate</definition>
        <argsstring>(LISP ptr)</argsstring>
        <name>array_gc_relocate</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="146" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1afb5c18fa26f62b9d73e80babbfb47e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void array_gc_scan</definition>
        <argsstring>(LISP ptr)</argsstring>
        <name>array_gc_scan</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="147" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a54f48542c83f48bf6a2f92dbc6c2d26f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP array_gc_mark</definition>
        <argsstring>(LISP ptr)</argsstring>
        <name>array_gc_mark</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="148" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a301c5a2dd1476be95028fe739f26abf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void array_gc_free</definition>
        <argsstring>(LISP ptr)</argsstring>
        <name>array_gc_free</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="149" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="90" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aa9c03879b10b50ec135bec1659386820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void array_prin1</definition>
        <argsstring>(LISP ptr, struct gen_printio *f)</argsstring>
        <name>array_prin1</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>struct <ref refid="structgen__printio" kindref="compound">gen_printio</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="150" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="117" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a24b03e1fe86b640e83642d5812e5255a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long array_sxhaxh</definition>
        <argsstring>(LISP, long)</argsstring>
        <name>array_sxhaxh</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <param>
          <type>long</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a3e9efab4556c9e0d97cebf567ab12384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP array_fast_print</definition>
        <argsstring>(LISP, LISP)</argsstring>
        <name>array_fast_print</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="152" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="921" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a35494069050df35ad933709ff7bfb8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP array_fast_read</definition>
        <argsstring>(int, LISP)</argsstring>
        <name>array_fast_read</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="153" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="955" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a32f7a5d978e50d79e6ccc9d352193cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP array_equal</definition>
        <argsstring>(LISP, LISP)</argsstring>
        <name>array_equal</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="154" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="652" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a355ee8590fe28886334c5001b88e5b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long array_sxhash</definition>
        <argsstring>(LISP, long)</argsstring>
        <name>array_sxhash</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <param>
          <type>long</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="155" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="691" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aa8a331a57ad6cdc0eb9d110cc12d6d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rfs_getc</definition>
        <argsstring>(unsigned char **p)</argsstring>
        <name>rfs_getc</name>
        <param>
          <type>unsigned char **</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="157" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="205" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aefe2e68e6b427727bbb67887ccb747b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rfs_ungetc</definition>
        <argsstring>(unsigned char c, unsigned char **p)</argsstring>
        <name>rfs_ungetc</name>
        <param>
          <type>unsigned char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="158" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a4499c21c7929c1d50b0e5582784c123c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void err1_aset1</definition>
        <argsstring>(LISP i)</argsstring>
        <name>err1_aset1</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="159" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="283" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aea8bf52575c47d976bb3ebb769e51c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void err2_aset1</definition>
        <argsstring>(LISP v)</argsstring>
        <name>err2_aset1</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="160" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="286" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ad4b090412f2f1d3b238c71066c767acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lreadstring</definition>
        <argsstring>(struct gen_readio *f)</argsstring>
        <name>lreadstring</name>
        <param>
          <type>struct <ref refid="structgen__readio" kindref="compound">gen_readio</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="161" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="510" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a5c05252399bd19c90c46ff954b6a8c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lreadsharp</definition>
        <argsstring>(struct gen_readio *f)</argsstring>
        <name>lreadsharp</name>
        <param>
          <type>struct <ref refid="structgen__readio" kindref="compound">gen_readio</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="162" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="556" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a3a3fdeb979a93f1808be1ea0a38168f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void file_gc_free</definition>
        <argsstring>(LISP ptr)</argsstring>
        <name>file_gc_free</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="164" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2365" bodyend="2371"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a3f48eeb0c19a83bda599d643800793a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void file_prin1</definition>
        <argsstring>(LISP ptr, struct gen_printio *f)</argsstring>
        <name>file_prin1</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>struct <ref refid="structgen__printio" kindref="compound">gen_printio</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="165" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2373" bodyend="2382"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a16ec1e6c4f754f6d80590292391193f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP fopen_c</definition>
        <argsstring>(char *name, char *how)</argsstring>
        <name>fopen_c</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>how</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="166" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2206" bodyend="2207"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a6aa35d69043ef4ea800ec8aa47cffe0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP fopen_cg</definition>
        <argsstring>(FILE *(*)(const char *, const char *), char *, char *)</argsstring>
        <name>fopen_cg</name>
        <param>
          <type>FILE *</type>
          <array>*)(const char *, const char *</array>
        </param>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="167"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a15d4e3a86de28e7b7489fc66aad0f0e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP fopen_l</definition>
        <argsstring>(LISP name, LISP how)</argsstring>
        <name>fopen_l</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>how</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="168" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2209" bodyend="2210"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a5411921bc079c09067ada4644f6c5da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP fclose_l</definition>
        <argsstring>(LISP p)</argsstring>
        <name>fclose_l</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="169" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2219" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1adea5b8044e594d74a38221efa9a4b003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lftell</definition>
        <argsstring>(LISP file)</argsstring>
        <name>lftell</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="170" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2420" bodyend="2421"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a8de5d91775729b78c693d817d9bbad66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lfseek</definition>
        <argsstring>(LISP file, LISP offset, LISP direction)</argsstring>
        <name>lfseek</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="171" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2423" bodyend="2425"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a71f531ef4a63695778b1194f0628f396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lfread</definition>
        <argsstring>(LISP size, LISP file)</argsstring>
        <name>lfread</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="172" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="1024" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a43dd5bc72de2c5c5cbd1c3d31ae34be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lfwrite</definition>
        <argsstring>(LISP string, LISP file)</argsstring>
        <name>lfwrite</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="173" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="1065" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aea37b84871f69aaafff97276fea5e679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP leval_while</definition>
        <argsstring>(LISP args, LISP env)</argsstring>
        <name>leval_while</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="176" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1915" bodyend="1920"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a8aca0a64d43d28620c4a7633d62e8e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_subrs_a</definition>
        <argsstring>(void)</argsstring>
        <name>init_subrs_a</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="178" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="2038" bodyend="2152"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ab0f60af27ce0b81cab33cf26c77c91ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_subrs_1</definition>
        <argsstring>(void)</argsstring>
        <name>init_subrs_1</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="179" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2568" bodyend="2664"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a21b0d01342aaa44a2108bcb8effe8cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long href_index</definition>
        <argsstring>(LISP table, LISP key)</argsstring>
        <name>href_index</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="181" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="730" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ae49b81664df23d390f26f0d48ed7d464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_long</definition>
        <argsstring>(long, FILE *)</argsstring>
        <name>put_long</name>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>FILE *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="183" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="773" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a36bfcbe5f7b84f9f9da13c17315742b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long get_long</definition>
        <argsstring>(FILE *)</argsstring>
        <name>get_long</name>
        <param>
          <type>FILE *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="184" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="776" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ac2b8159ec78b19b16813a3944c2f55c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long fast_print_table</definition>
        <argsstring>(LISP obj, LISP table)</argsstring>
        <name>fast_print_table</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="186" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="781" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a1861d5a3a532fdba8e0d6695acfc8f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP stack_limit</definition>
        <argsstring>(LISP, LISP)</argsstring>
        <name>stack_limit</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="188" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="647" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aa7709178b2756c0f99391013456f9aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void err0</definition>
        <argsstring>(void)</argsstring>
        <name>err0</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="191" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2669" bodyend="2670"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a2a665e8d0f22fef04b214e73a162dd28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pr</definition>
        <argsstring>(LISP)</argsstring>
        <name>pr</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="192" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2672" bodyend="2676"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a8bd224b08486362de11d72d59a8fdc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prp</definition>
        <argsstring>(LISP *)</argsstring>
        <name>prp</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="193" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2678" bodyend="2680"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a8c1a1b6793a1a4cfe00fec10c80ae76c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP closure_code</definition>
        <argsstring>(LISP exp)</argsstring>
        <name>closure_code</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="195" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2436" bodyend="2437"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ac2dd1d89b090991184717bb5cb4decfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP closure_env</definition>
        <argsstring>(LISP exp)</argsstring>
        <name>closure_env</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="196" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2439" bodyend="2440"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a53a25be98b04cf09f2a2a5f979d85938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP lwhile</definition>
        <argsstring>(LISP form, LISP env)</argsstring>
        <name>lwhile</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>form</declname>
        </param>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="197" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="2442" bodyend="2447"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1aef9d9267ab9e4fd94da0e801fb9f623d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP llength</definition>
        <argsstring>(LISP obj)</argsstring>
        <name>llength</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="198" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/sliba.c" bodystart="1121" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a02770d7e41720d2c4a9a512981dee2d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gc_kind_check</definition>
        <argsstring>(void)</argsstring>
        <name>gc_kind_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="199" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1415" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a7ec2c52d293924a12ff197d362d7233a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP allocate_aheap</definition>
        <argsstring>(void)</argsstring>
        <name>allocate_aheap</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="200" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1213" bodyend="1237"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1acf07364f543367b16c4673ef932248bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long looks_pointerp</definition>
        <argsstring>(LISP)</argsstring>
        <name>looks_pointerp</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="201" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1352" bodyend="1362"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1af5b33abcc3956f70fbc1758b1fa827b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long nactive_heaps</definition>
        <argsstring>(void)</argsstring>
        <name>nactive_heaps</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="202" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1434" bodyend="1437"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1ae60d7b046ce53981aa418fb260ef55fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long freelist_length</definition>
        <argsstring>(void)</argsstring>
        <name>freelist_length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="203" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1439" bodyend="1444"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a70390bc4510823bc87307e0173f4a3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP gc_info</definition>
        <argsstring>(LISP)</argsstring>
        <name>gc_info</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="204" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1470" bodyend="1485"/>
      </memberdef>
      <memberdef kind="function" id="siodp_8h_1a1f649a5107d04ff82c478a5a06fa6707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structobj" kindref="compound">LISP</ref></type>
        <definition>LISP err_closure_code</definition>
        <argsstring>(LISP tmp)</argsstring>
        <name>err_closure_code</name>
        <param>
          <type><ref refid="structobj" kindref="compound">LISP</ref></type>
          <declname>tmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h" line="205" bodyfile="C:/Users/josburn/Documents/programming/siod/libsiod/slib.c" bodystart="1529" bodyend="1530"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Scheme<sp/>In<sp/>One<sp/>Defun,<sp/>but<sp/>in<sp/>C<sp/>this<sp/>time.</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COPYRIGHT<sp/>(c)<sp/>1988-1992<sp/>BY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PARADIGM<sp/>ASSOCIATES<sp/>INCORPORATED,<sp/>CAMBRIDGE,<sp/>MASSACHUSETTS.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>the<sp/>source<sp/>file<sp/>SLIB.C<sp/>for<sp/>more<sp/>information.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Declarations<sp/>which<sp/>are<sp/>private<sp/>to<sp/>SLIB.C<sp/>internals.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">However,<sp/>some<sp/>of<sp/>these<sp/>should<sp/>be<sp/>moved<sp/>to<sp/>siod.h</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>$Id:<sp/>siodp.h,v<sp/>1.6<sp/>1997/05/05<sp/>12:52:25<sp/>gjc<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tkbuffer;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>heap,heap_end,heap_org;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>sym_t;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>siod_verbose_level;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*siod_lib;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nointerrupt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>interrupt_differed;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>errjmp_ok;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>unbound_marker;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structuser__type__hooks" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuser__type__hooks" kindref="compound">user_type_hooks</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{<ref refid="structobj" kindref="compound">LISP</ref><sp/>(*gc_relocate)(<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/>void<sp/>(*gc_scan)(<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>(*gc_mark)(<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/>void<sp/>(*gc_free)(<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/>void<sp/>(*prin1)(<ref refid="structobj" kindref="compound">LISP</ref>,</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgen__printio" kindref="compound">gen_printio</ref><sp/>*);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>(*leval)(<ref refid="structobj" kindref="compound">LISP</ref>,<sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>*,<sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>*);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/>long<sp/>(*c_sxhash)(<ref refid="structobj" kindref="compound">LISP</ref>,long);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>(*fast_print)(<ref refid="structobj" kindref="compound">LISP</ref>,<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>(*fast_read)(int,<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>(*equal)(<ref refid="structobj" kindref="compound">LISP</ref>,<ref refid="structobj" kindref="compound">LISP</ref>);};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structcatch__frame" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcatch__frame" kindref="compound">catch_frame</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{<ref refid="structobj" kindref="compound">LISP</ref><sp/>tag;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><ref refid="structobj" kindref="compound">LISP</ref><sp/>retval;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/>jmp_buf<sp/>cframe;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcatch__frame" kindref="compound">catch_frame</ref><sp/>*next;};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcatch__frame" kindref="compound">catch_frame</ref><sp/>*catch_framep;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structgc__protected" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgc__protected" kindref="compound">gc_protected</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{<ref refid="structobj" kindref="compound">LISP</ref><sp/>*location;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgc__protected" kindref="compound">gc_protected</ref><sp/>*next;};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NEWCELL(_into,_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">{if<sp/>(gc_kind_copying<sp/>==<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/>{if<sp/>((_into<sp/>=<sp/>heap)<sp/>&gt;=<sp/>heap_end)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gc_fatal_error();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>heap<sp/>=<sp/>_into+1;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/>{if<sp/>NULLP(freelist)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gc_for_newcell();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_into<sp/>=<sp/>freelist;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>freelist<sp/>=<sp/>CDR(freelist);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>++gc_cells_allocated;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/>(*_into).gc_mark<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/>(*_into).type<sp/>=<sp/>(short)<sp/>_type;}</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(THINK_C)</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipoll_counter;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>full_interrupt_poll(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*counter);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTERRUPT_CHECK()<sp/>if<sp/>(--ipoll_counter<sp/>&lt;<sp/>0)<sp/>full_interrupt_poll(&amp;ipoll_counter)</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_interrupt_differed(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTERRUPT_CHECK()<sp/>if<sp/>(interrupt_differed)<sp/>handle_interrupt_differed()</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INTERRUPT_CHECK()</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stack_limit_ptr;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_LIMIT(_ptr,_amt)<sp/>(((char<sp/>*)_ptr)<sp/>-<sp/>(_amt))</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_CHECK(_ptr)<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/>if<sp/>(((char<sp/>*)<sp/>(_ptr))<sp/>&lt;<sp/>stack_limit_ptr)<sp/>err_stack((char<sp/>*)<sp/>_ptr);</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>err_stack(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(VMS)<sp/>&amp;&amp;<sp/>defined(VAX)</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SIG_restargs<sp/>,...</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SIG_restargs</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_sigfpe(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig<sp/>SIG_restargs);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_sigint(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig<sp/>SIG_restargs);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>err_ctrl_c(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>myruntime(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fput_st(FILE<sp/>*f,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*st);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_st(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*st);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>grepl_puts(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_fatal_error(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>gen_intern(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>copyp);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scan_registers(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_storage_1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuser__type__hooks" kindref="compound">user_type_hooks</ref><sp/>*get_user_type_hooks(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>get_newspace(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scan_newspace(<ref refid="structobj" kindref="compound">LISP</ref><sp/>newspace);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_oldspace(<ref refid="structobj" kindref="compound">LISP</ref><sp/>space,<ref refid="structobj" kindref="compound">LISP</ref><sp/>end);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_stop_and_copy(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_for_newcell(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_mark_and_sweep(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_ms_stats_start(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_ms_stats_end(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_mark(<ref refid="structobj" kindref="compound">LISP</ref><sp/>ptr);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mark_protected_registers(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mark_locations(<ref refid="structobj" kindref="compound">LISP</ref><sp/>*start,<ref refid="structobj" kindref="compound">LISP</ref><sp/>*end);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mark_locations_array(<ref refid="structobj" kindref="compound">LISP</ref><sp/>*x,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_sweep(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_args(<ref refid="structobj" kindref="compound">LISP</ref><sp/>l,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>extend_env(<ref refid="structobj" kindref="compound">LISP</ref><sp/>actuals,<ref refid="structobj" kindref="compound">LISP</ref><sp/>formals,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>envlookup(<ref refid="structobj" kindref="compound">LISP</ref><sp/>var,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>setvar(<ref refid="structobj" kindref="compound">LISP</ref><sp/>var,<ref refid="structobj" kindref="compound">LISP</ref><sp/>val,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_setq(<ref refid="structobj" kindref="compound">LISP</ref><sp/>args,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>syntax_define(<ref refid="structobj" kindref="compound">LISP</ref><sp/>args);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_define(<ref refid="structobj" kindref="compound">LISP</ref><sp/>args,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_if(<ref refid="structobj" kindref="compound">LISP</ref><sp/>*pform,<ref refid="structobj" kindref="compound">LISP</ref><sp/>*penv);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_lambda(<ref refid="structobj" kindref="compound">LISP</ref><sp/>args,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_progn(<ref refid="structobj" kindref="compound">LISP</ref><sp/>*pform,<ref refid="structobj" kindref="compound">LISP</ref><sp/>*penv);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_or(<ref refid="structobj" kindref="compound">LISP</ref><sp/>*pform,<ref refid="structobj" kindref="compound">LISP</ref><sp/>*penv);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_and(<ref refid="structobj" kindref="compound">LISP</ref><sp/>*pform,<ref refid="structobj" kindref="compound">LISP</ref><sp/>*penv);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_catch_1(<ref refid="structobj" kindref="compound">LISP</ref><sp/>forms,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_catch(<ref refid="structobj" kindref="compound">LISP</ref><sp/>args,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lthrow(<ref refid="structobj" kindref="compound">LISP</ref><sp/>tag,<ref refid="structobj" kindref="compound">LISP</ref><sp/>value);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_let(<ref refid="structobj" kindref="compound">LISP</ref><sp/>*pform,<ref refid="structobj" kindref="compound">LISP</ref><sp/>*penv);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>reverse(<ref refid="structobj" kindref="compound">LISP</ref><sp/>l);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>let_macro(<ref refid="structobj" kindref="compound">LISP</ref><sp/>form);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_quote(<ref refid="structobj" kindref="compound">LISP</ref><sp/>args,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_tenv(<ref refid="structobj" kindref="compound">LISP</ref><sp/>args,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flush_ws(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgen__readio" kindref="compound">gen_readio</ref><sp/>*f,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*eoferr);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f_getc(FILE<sp/>*f);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>f_ungetc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/>FILE<sp/>*f);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lreadr(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgen__readio" kindref="compound">gen_readio</ref><sp/>*f);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lreadparen(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgen__readio" kindref="compound">gen_readio</ref><sp/>*f);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>arglchk(<ref refid="structobj" kindref="compound">LISP</ref><sp/>x);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_storage_a1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_storage_a(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>array_gc_relocate(<ref refid="structobj" kindref="compound">LISP</ref><sp/>ptr);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>array_gc_scan(<ref refid="structobj" kindref="compound">LISP</ref><sp/>ptr);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>array_gc_mark(<ref refid="structobj" kindref="compound">LISP</ref><sp/>ptr);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>array_gc_free(<ref refid="structobj" kindref="compound">LISP</ref><sp/>ptr);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>array_prin1(<ref refid="structobj" kindref="compound">LISP</ref><sp/>ptr,</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgen__printio" kindref="compound">gen_printio</ref><sp/>*f);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>array_sxhaxh(<ref refid="structobj" kindref="compound">LISP</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>array_fast_print(<ref refid="structobj" kindref="compound">LISP</ref>,<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>array_fast_read(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>array_equal(<ref refid="structobj" kindref="compound">LISP</ref>,<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>array_sxhash(<ref refid="structobj" kindref="compound">LISP</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rfs_getc(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**p);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rfs_ungetc(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**p);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>err1_aset1(<ref refid="structobj" kindref="compound">LISP</ref><sp/>i);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>err2_aset1(<ref refid="structobj" kindref="compound">LISP</ref><sp/>v);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lreadstring(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgen__readio" kindref="compound">gen_readio</ref><sp/>*f);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lreadsharp(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgen__readio" kindref="compound">gen_readio</ref><sp/>*f);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>file_gc_free(<ref refid="structobj" kindref="compound">LISP</ref><sp/>ptr);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>file_prin1(<ref refid="structobj" kindref="compound">LISP</ref><sp/>ptr,</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgen__printio" kindref="compound">gen_printio</ref><sp/>*f);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>fopen_c(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*how);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>fopen_cg(FILE<sp/>*(*)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*),</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>fopen_l(<ref refid="structobj" kindref="compound">LISP</ref><sp/>name,<ref refid="structobj" kindref="compound">LISP</ref><sp/>how);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>fclose_l(<ref refid="structobj" kindref="compound">LISP</ref><sp/>p);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lftell(<ref refid="structobj" kindref="compound">LISP</ref><sp/>file);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lfseek(<ref refid="structobj" kindref="compound">LISP</ref><sp/>file,<ref refid="structobj" kindref="compound">LISP</ref><sp/>offset,<ref refid="structobj" kindref="compound">LISP</ref><sp/>direction);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lfread(<ref refid="structobj" kindref="compound">LISP</ref><sp/>size,<ref refid="structobj" kindref="compound">LISP</ref><sp/>file);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lfwrite(<ref refid="structobj" kindref="compound">LISP</ref><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<ref refid="structobj" kindref="compound">LISP</ref><sp/>file);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>leval_while(<ref refid="structobj" kindref="compound">LISP</ref><sp/>args,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_subrs_a(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_subrs_1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>href_index(<ref refid="structobj" kindref="compound">LISP</ref><sp/>table,<ref refid="structobj" kindref="compound">LISP</ref><sp/>key);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,FILE<sp/>*);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>get_long(FILE<sp/>*);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>fast_print_table(<ref refid="structobj" kindref="compound">LISP</ref><sp/><ref refid="structobj" kindref="compound">obj</ref>,<ref refid="structobj" kindref="compound">LISP</ref><sp/>table);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>stack_limit(<ref refid="structobj" kindref="compound">LISP</ref>,<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>err0(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pr(<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prp(<ref refid="structobj" kindref="compound">LISP</ref><sp/>*);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>closure_code(<ref refid="structobj" kindref="compound">LISP</ref><sp/>exp);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>closure_env(<ref refid="structobj" kindref="compound">LISP</ref><sp/>exp);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>lwhile(<ref refid="structobj" kindref="compound">LISP</ref><sp/>form,<ref refid="structobj" kindref="compound">LISP</ref><sp/>env);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>llength(<ref refid="structobj" kindref="compound">LISP</ref><sp/><ref refid="structobj" kindref="compound">obj</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gc_kind_check(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>allocate_aheap(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>looks_pointerp(<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nactive_heaps(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>freelist_length(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>gc_info(<ref refid="structobj" kindref="compound">LISP</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="structobj" kindref="compound">LISP</ref><sp/>err_closure_code(<ref refid="structobj" kindref="compound">LISP</ref><sp/>tmp);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VLOAD_OFFSET_HACK_CHAR<sp/>&apos;|&apos;</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/josburn/Documents/programming/siod/libsiod/siodp.h"/>
  </compounddef>
</doxygen>
